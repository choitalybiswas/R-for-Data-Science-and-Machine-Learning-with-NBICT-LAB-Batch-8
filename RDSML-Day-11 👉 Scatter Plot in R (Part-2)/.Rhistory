q()
q()
data = c(9, 6, 17, 31, 11)
mean(data)
#Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
z
setwd("C:/Users/HP/Desktop/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-11 ðŸ‘‰ Scatter Plot in R (Part-2)")
dataset = mtcars
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
dataset = mtcars
View(dataset)
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
# install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
# Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
# Changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
# Adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
#removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm , se = FALSE)
#LOESS method
gplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
#LOESS method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
# Change the line type and colour
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Change the line type and colour
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed")
# Change the line type and colour
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkblue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred", fill = "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred", fill = "blue")
#changing the point shapes
dataset$cyl
class(dataset$cyl)
#changing the point shapes
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
#changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y= mpg, shape = cyl)) +
geom_point()
#converting the cyl column feom a numeric to factor variable
dataset$cyl = as.factor(dataset$cyl)
#changing the point shapes by the levels of cyl
ggplot(dataset, aes(x= wt, y= mpg, shape = cyl)) +
geom_point()
#changing point shapes and colours by the level of cyl
ggplot(dataset, aes(x= wt, y= mpg, shape = cyl, colour = cyl)) +
geom_point()
#changing point shapes ,colors and sizes
ggplot(dataset, aes(x= wt, y= mpg, shape = cyl, colour = cyl,size = cyl)) +
geom_point()
#changing point shapes ,colors and sizes
ggplot(dataset, aes(x= wt, y= mpg, colour = cyl,size = cyl)) +
geom_point()
hape = cyl,
size
#changing point shapes ,colors and sizes
ggplot(dataset, aes(x= wt, y= mpg, shape = cyl, colour = cyl,size = cyl)) +
geom_point()
#changing point shapes ,colors and sizes
ggplot(dataset, aes(x= wt, y= mpg, shape = cyl, colour = cyl, size = cyl)) +
geom_point()
#changing point shapes ,colors and sizes
ggplot(dataset, aes(x= wt, y= mpg, shape = cyl, colour = cyl, size = cyl)) +
geom_point()
